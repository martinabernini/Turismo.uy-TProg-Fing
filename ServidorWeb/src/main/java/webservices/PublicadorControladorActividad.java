
package webservices;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "PublicadorControladorActividad", targetNamespace = "http://webservices/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PublicadorControladorActividad {


    /**
     * 
     * @param fileName
     * @return
     *     returns byte[]
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/PublicadorControladorActividad/getFileRequest", output = "http://webservices/PublicadorControladorActividad/getFileResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://webservices/PublicadorControladorActividad/getFile/Fault/IOException")
    })
    public byte[] getFile(
        @WebParam(name = "fileName", partName = "fileName")
        String fileName)
        throws IOException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.WrapperArrayList
     * @throws CampoInvalidoException_Exception
     * @throws NoHayEntidadesParaListarException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/PublicadorControladorActividad/listarActividadesAsociadasADepartamentoRequest", output = "http://webservices/PublicadorControladorActividad/listarActividadesAsociadasADepartamentoResponse", fault = {
        @FaultAction(className = NoHayEntidadesParaListarException_Exception.class, value = "http://webservices/PublicadorControladorActividad/listarActividadesAsociadasADepartamento/Fault/NoHayEntidadesParaListarException"),
        @FaultAction(className = CampoInvalidoException_Exception.class, value = "http://webservices/PublicadorControladorActividad/listarActividadesAsociadasADepartamento/Fault/CampoInvalidoException")
    })
    public WrapperArrayList listarActividadesAsociadasADepartamento(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws CampoInvalidoException_Exception, NoHayEntidadesParaListarException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.WrapperArrayList
     * @throws CampoInvalidoException_Exception
     * @throws NoHayEntidadesParaListarException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/PublicadorControladorActividad/listarActividadesAsociadasADepartamentoConfirmadasRequest", output = "http://webservices/PublicadorControladorActividad/listarActividadesAsociadasADepartamentoConfirmadasResponse", fault = {
        @FaultAction(className = NoHayEntidadesParaListarException_Exception.class, value = "http://webservices/PublicadorControladorActividad/listarActividadesAsociadasADepartamentoConfirmadas/Fault/NoHayEntidadesParaListarException"),
        @FaultAction(className = CampoInvalidoException_Exception.class, value = "http://webservices/PublicadorControladorActividad/listarActividadesAsociadasADepartamentoConfirmadas/Fault/CampoInvalidoException")
    })
    public WrapperArrayList listarActividadesAsociadasADepartamentoConfirmadas(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws CampoInvalidoException_Exception, NoHayEntidadesParaListarException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.DtActividadTuristica
     * @throws CampoInvalidoException_Exception
     * @throws EntidadNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/PublicadorControladorActividad/getActividadTuristicaRequest", output = "http://webservices/PublicadorControladorActividad/getActividadTuristicaResponse", fault = {
        @FaultAction(className = EntidadNoExisteException_Exception.class, value = "http://webservices/PublicadorControladorActividad/getActividadTuristica/Fault/EntidadNoExisteException"),
        @FaultAction(className = CampoInvalidoException_Exception.class, value = "http://webservices/PublicadorControladorActividad/getActividadTuristica/Fault/CampoInvalidoException")
    })
    public DtActividadTuristica getActividadTuristica(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws CampoInvalidoException_Exception, EntidadNoExisteException_Exception
    ;

    /**
     * 
     * @return
     *     returns webservices.WrapperArrayList
     * @throws NoHayEntidadesParaListarException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/PublicadorControladorActividad/listarActividadesEnEstadoAgregadaRequest", output = "http://webservices/PublicadorControladorActividad/listarActividadesEnEstadoAgregadaResponse", fault = {
        @FaultAction(className = NoHayEntidadesParaListarException_Exception.class, value = "http://webservices/PublicadorControladorActividad/listarActividadesEnEstadoAgregada/Fault/NoHayEntidadesParaListarException")
    })
    public WrapperArrayList listarActividadesEnEstadoAgregada()
        throws NoHayEntidadesParaListarException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws CampoInvalidoException_Exception
     * @throws EntidadRepetidaException_Exception
     */
    @WebMethod
    @Action(input = "http://webservices/PublicadorControladorActividad/darDeAltaCategoriaRequest", output = "http://webservices/PublicadorControladorActividad/darDeAltaCategoriaResponse", fault = {
        @FaultAction(className = EntidadRepetidaException_Exception.class, value = "http://webservices/PublicadorControladorActividad/darDeAltaCategoria/Fault/EntidadRepetidaException"),
        @FaultAction(className = CampoInvalidoException_Exception.class, value = "http://webservices/PublicadorControladorActividad/darDeAltaCategoria/Fault/CampoInvalidoException")
    })
    public void darDeAltaCategoria(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws CampoInvalidoException_Exception, EntidadRepetidaException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns webservices.WrapperArrayList
     * @throws CampoInvalidoException_Exception
     * @throws NoHayEntidadesParaListarException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/PublicadorControladorActividad/listarActividadesAsocadasADepartamentoNoEnPaqueteRequest", output = "http://webservices/PublicadorControladorActividad/listarActividadesAsocadasADepartamentoNoEnPaqueteResponse", fault = {
        @FaultAction(className = NoHayEntidadesParaListarException_Exception.class, value = "http://webservices/PublicadorControladorActividad/listarActividadesAsocadasADepartamentoNoEnPaquete/Fault/NoHayEntidadesParaListarException"),
        @FaultAction(className = CampoInvalidoException_Exception.class, value = "http://webservices/PublicadorControladorActividad/listarActividadesAsocadasADepartamentoNoEnPaquete/Fault/CampoInvalidoException")
    })
    public WrapperArrayList listarActividadesAsocadasADepartamentoNoEnPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws CampoInvalidoException_Exception, NoHayEntidadesParaListarException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.WrapperArrayList
     * @throws CampoInvalidoException_Exception
     * @throws NoHayEntidadesParaListarException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/PublicadorControladorActividad/listarActividadesAsociadasACategoriaConfirmadasRequest", output = "http://webservices/PublicadorControladorActividad/listarActividadesAsociadasACategoriaConfirmadasResponse", fault = {
        @FaultAction(className = NoHayEntidadesParaListarException_Exception.class, value = "http://webservices/PublicadorControladorActividad/listarActividadesAsociadasACategoriaConfirmadas/Fault/NoHayEntidadesParaListarException"),
        @FaultAction(className = CampoInvalidoException_Exception.class, value = "http://webservices/PublicadorControladorActividad/listarActividadesAsociadasACategoriaConfirmadas/Fault/CampoInvalidoException")
    })
    public WrapperArrayList listarActividadesAsociadasACategoriaConfirmadas(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws CampoInvalidoException_Exception, NoHayEntidadesParaListarException_Exception
    ;

    /**
     * 
     * @return
     *     returns webservices.WrapperArrayList
     * @throws NoHayEntidadesParaListarException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/PublicadorControladorActividad/listarActividadesEnEstadoConfirmadaRequest", output = "http://webservices/PublicadorControladorActividad/listarActividadesEnEstadoConfirmadaResponse", fault = {
        @FaultAction(className = NoHayEntidadesParaListarException_Exception.class, value = "http://webservices/PublicadorControladorActividad/listarActividadesEnEstadoConfirmada/Fault/NoHayEntidadesParaListarException")
    })
    public WrapperArrayList listarActividadesEnEstadoConfirmada()
        throws NoHayEntidadesParaListarException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.WrapperArrayList
     * @throws CampoInvalidoException_Exception
     * @throws NoHayEntidadesParaListarException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/PublicadorControladorActividad/listarActividadesDeProveedorNoConfirmadasRequest", output = "http://webservices/PublicadorControladorActividad/listarActividadesDeProveedorNoConfirmadasResponse", fault = {
        @FaultAction(className = NoHayEntidadesParaListarException_Exception.class, value = "http://webservices/PublicadorControladorActividad/listarActividadesDeProveedorNoConfirmadas/Fault/NoHayEntidadesParaListarException"),
        @FaultAction(className = CampoInvalidoException_Exception.class, value = "http://webservices/PublicadorControladorActividad/listarActividadesDeProveedorNoConfirmadas/Fault/CampoInvalidoException")
    })
    public WrapperArrayList listarActividadesDeProveedorNoConfirmadas(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws CampoInvalidoException_Exception, NoHayEntidadesParaListarException_Exception
    ;

    /**
     * 
     * @return
     *     returns webservices.WrapperArrayList
     * @throws NoHayEntidadesParaListarException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/PublicadorControladorActividad/listarAllActividadesRequest", output = "http://webservices/PublicadorControladorActividad/listarAllActividadesResponse", fault = {
        @FaultAction(className = NoHayEntidadesParaListarException_Exception.class, value = "http://webservices/PublicadorControladorActividad/listarAllActividades/Fault/NoHayEntidadesParaListarException")
    })
    public WrapperArrayList listarAllActividades()
        throws NoHayEntidadesParaListarException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws CampoInvalidoException_Exception
     * @throws EntidadRepetidaException_Exception
     */
    @WebMethod
    @Action(input = "http://webservices/PublicadorControladorActividad/darDeAltaActividadTuristicaRequest", output = "http://webservices/PublicadorControladorActividad/darDeAltaActividadTuristicaResponse", fault = {
        @FaultAction(className = CampoInvalidoException_Exception.class, value = "http://webservices/PublicadorControladorActividad/darDeAltaActividadTuristica/Fault/CampoInvalidoException"),
        @FaultAction(className = EntidadRepetidaException_Exception.class, value = "http://webservices/PublicadorControladorActividad/darDeAltaActividadTuristica/Fault/EntidadRepetidaException")
    })
    public void darDeAltaActividadTuristica(
        @WebParam(name = "arg0", partName = "arg0")
        DtActividadTuristica arg0)
        throws CampoInvalidoException_Exception, EntidadRepetidaException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @throws CampoInvalidoException_Exception
     * @throws EntidadNoExisteException_Exception
     */
    @WebMethod
    @Action(input = "http://webservices/PublicadorControladorActividad/rechazarAceptarActividadRequest", output = "http://webservices/PublicadorControladorActividad/rechazarAceptarActividadResponse", fault = {
        @FaultAction(className = EntidadNoExisteException_Exception.class, value = "http://webservices/PublicadorControladorActividad/rechazarAceptarActividad/Fault/EntidadNoExisteException"),
        @FaultAction(className = CampoInvalidoException_Exception.class, value = "http://webservices/PublicadorControladorActividad/rechazarAceptarActividad/Fault/CampoInvalidoException")
    })
    public void rechazarAceptarActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        boolean arg1)
        throws CampoInvalidoException_Exception, EntidadNoExisteException_Exception
    ;

    /**
     * 
     * @return
     *     returns webservices.WrapperArrayList
     * @throws NoHayEntidadesParaListarException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/PublicadorControladorActividad/listarTodasLasCategoriasRequest", output = "http://webservices/PublicadorControladorActividad/listarTodasLasCategoriasResponse", fault = {
        @FaultAction(className = NoHayEntidadesParaListarException_Exception.class, value = "http://webservices/PublicadorControladorActividad/listarTodasLasCategorias/Fault/NoHayEntidadesParaListarException")
    })
    public WrapperArrayList listarTodasLasCategorias()
        throws NoHayEntidadesParaListarException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/PublicadorControladorActividad/existeActividadConNombreRequest", output = "http://webservices/PublicadorControladorActividad/existeActividadConNombreResponse")
    public boolean existeActividadConNombre(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @throws CampoInvalidoException_Exception
     * @throws EntidadNoExisteException_Exception
     */
    @WebMethod
    @Action(input = "http://webservices/PublicadorControladorActividad/finalizarActividadRequest", output = "http://webservices/PublicadorControladorActividad/finalizarActividadResponse", fault = {
        @FaultAction(className = EntidadNoExisteException_Exception.class, value = "http://webservices/PublicadorControladorActividad/finalizarActividad/Fault/EntidadNoExisteException"),
        @FaultAction(className = CampoInvalidoException_Exception.class, value = "http://webservices/PublicadorControladorActividad/finalizarActividad/Fault/CampoInvalidoException")
    })
    public void finalizarActividad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws CampoInvalidoException_Exception, EntidadNoExisteException_Exception
    ;

}
